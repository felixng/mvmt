var app = angular.module('mvmt', ['ngRoute', 'ngAnimate']);

// This will cause your app to compile when Turbolinks loads a new page
// and removes the need for ng-app in the DOM
$(document).on('ready page:load', function(arguments) {
  angular.bootstrap(document.body, ['mvmt']);
});

app.config(function($locationProvider) {
  $locationProvider.html5Mode(true);
})

app.directive('modal', function () {
    return {
        template: '<div class="bt-overlay">' +
        '<div class="modal-dialog">' +
        '<div class="modal-content">' +
        '<div class="modal-header">' +
        '<button type="button" class="close" ng-click="toggleModal();" data-dismiss="modal" aria-hidden="true">&times;</button>' +
        '<h4 class="modal-title">{{ title }}</h4>' +
        '</div>' +
        '<div class="modal-body" ng-transclude></div>' +
        '</div>' +
        '</div>' +
        '</div>',
        restrict: 'E',
        transclude: true,
        replace:true,
        scope:true,
        link: function postLink(scope, element, attrs) {
            scope.title = attrs.title;

            scope.$watch(attrs.visible, function(value){
                if(value == true)
                    $(element).modal('show');
                else
                    $(element).modal('hide');
            });

            $(element).on('shown.bs.modal', function(){
                scope.$apply(function(){
                    scope.$parent[attrs.visible] = true;
                });
            });

            $(element).on('hidden.bs.modal', function(){
                scope.$apply(function(){
                    scope.$parent[attrs.visible] = false;
                });
            });
        }
    };
});

app.controller('MvmtCtrl',['$scope', function ($scope) {
        $scope.showModal = false;
        $scope.toggleModal = function () {
            $scope.showModal = !$scope.showModal;


        };

        function setUpFileInput(){
            var div = document.querySelector( '.form-group.place_logo' );

            var label	 = div.nextElementSibling;
            var labelVal = label.innerHTML;

            var fileInput = document.getElementById("logo");
            fileInput.addEventListener( 'change', function( e )
            {
                var fileName = '';

                if( this.files && this.files.length > 1 )
                    fileName = ( this.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', this.files.length );
                else
                    fileName = e.target.value.split( '\\' ).pop();

                if( fileName )
                    label.querySelector( 'span' ).innerHTML = fileName;
                else
                    label.innerHTML = labelVal;
            });

            // Firefox bug fix
            fileInput.addEventListener( 'focus', function(){ input.classList.add( 'has-focus' ); });
            fileInput.addEventListener( 'blur', function(){ input.classList.remove( 'has-focus' ); });
        }
    }
]);